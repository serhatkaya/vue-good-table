{"version":3,"file":"vue-good-table.min.js","sources":["../src/components/utils/constants.js","../node_modules/lodash.isequal/index.js","../src/components/utils/diacritics.js","../src/components/types/default.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/pagination/VgtPaginationPageInfo.vue","../src/components/utils/sort.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/parse/index.js","../src/components/types/date.js","../node_modules/date-fns/esm/compareAsc/index.js","../src/components/types/number.js","../src/components/types/decimal.js","../src/components/types/percentage.js","../src/components/types/boolean.js","../src/components/types/index.js","../src/components/Table.vue","../src/index.js"],"sourcesContent":["const DEFAULT_SORT_TYPE = 'asc';\r\nconst SORT_TYPES = {\r\n  Ascending: 'asc',\r\n  Descending: 'desc',\r\n  None: 'none',\r\n};\r\n\r\nconst PAGINATION_MODES = {\r\n  Pages: 'pages',\r\n  Records: 'records',\r\n};\r\nconst DEFAULT_ROWS_PER_PAGE_DROPDOWN = [10, 20, 30, 40, 50];\r\n\r\nexport {\r\n  DEFAULT_SORT_TYPE,\r\n  SORT_TYPES,\r\n\r\n  PAGINATION_MODES,\r\n  DEFAULT_ROWS_PER_PAGE_DROPDOWN,\r\n};\r\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","// all diacritics\r\nlet diacritics = {\r\n  a: [\r\n    \"a\",\r\n    \"à\",\r\n    \"á\",\r\n    \"â\",\r\n    \"ã\",\r\n    \"ä\",\r\n    \"å\",\r\n    \"æ\",\r\n    \"ā\",\r\n    \"ă\",\r\n    \"ą\",\r\n    \"ǎ\",\r\n    \"ǟ\",\r\n    \"ǡ\",\r\n    \"ǻ\",\r\n    \"ȁ\",\r\n    \"ȃ\",\r\n    \"ȧ\",\r\n    \"ɐ\",\r\n    \"ɑ\",\r\n    \"ɒ\",\r\n    \"ͣ\",\r\n    \"а\",\r\n    \"ӑ\",\r\n    \"ӓ\",\r\n    \"ᵃ\",\r\n    \"ᵄ\",\r\n    \"ᶏ\",\r\n    \"ḁ\",\r\n    \"ẚ\",\r\n    \"ạ\",\r\n    \"ả\",\r\n    \"ấ\",\r\n    \"ầ\",\r\n    \"ẩ\",\r\n    \"ẫ\",\r\n    \"ậ\",\r\n    \"ắ\",\r\n    \"ằ\",\r\n    \"ẳ\",\r\n    \"ẵ\",\r\n    \"ặ\",\r\n    \"ₐ\",\r\n    \"ⱥ\",\r\n    \"ａ\",\r\n  ],\r\n  b: [\"b\", \"ƀ\", \"ƃ\", \"ɓ\", \"ᖯ\", \"ᵇ\", \"ᵬ\", \"ᶀ\", \"ḃ\", \"ḅ\", \"ḇ\", \"ｂ\"],\r\n  c: [\"c\", \"ç\", \"ć\", \"ĉ\", \"ċ\", \"č\", \"ƈ\", \"ȼ\", \"ɕ\", \"ͨ\", \"ᴄ\", \"ᶜ\", \"ḉ\", \"ↄ\", \"ｃ\"],\r\n  d: [\r\n    \"d\",\r\n    \"ď\",\r\n    \"đ\",\r\n    \"Ƌ\",\r\n    \"ƌ\",\r\n    \"ȡ\",\r\n    \"ɖ\",\r\n    \"ɗ\",\r\n    \"ͩ\",\r\n    \"ᵈ\",\r\n    \"ᵭ\",\r\n    \"ᶁ\",\r\n    \"ᶑ\",\r\n    \"ḋ\",\r\n    \"ḍ\",\r\n    \"ḏ\",\r\n    \"ḑ\",\r\n    \"ḓ\",\r\n    \"ｄ\",\r\n  ],\r\n  e: [\r\n    \"e\",\r\n    \"è\",\r\n    \"é\",\r\n    \"ê\",\r\n    \"ë\",\r\n    \"ē\",\r\n    \"ĕ\",\r\n    \"ė\",\r\n    \"ę\",\r\n    \"ě\",\r\n    \"ǝ\",\r\n    \"ȅ\",\r\n    \"ȇ\",\r\n    \"ȩ\",\r\n    \"ɇ\",\r\n    \"ɘ\",\r\n    \"ͤ\",\r\n    \"ᵉ\",\r\n    \"ᶒ\",\r\n    \"ḕ\",\r\n    \"ḗ\",\r\n    \"ḙ\",\r\n    \"ḛ\",\r\n    \"ḝ\",\r\n    \"ẹ\",\r\n    \"ẻ\",\r\n    \"ẽ\",\r\n    \"ế\",\r\n    \"ề\",\r\n    \"ể\",\r\n    \"ễ\",\r\n    \"ệ\",\r\n    \"ₑ\",\r\n    \"ｅ\",\r\n  ],\r\n  f: [\"f\", \"ƒ\", \"ᵮ\", \"ᶂ\", \"ᶠ\", \"ḟ\", \"ｆ\"],\r\n  g: [\"g\", \"ĝ\", \"ğ\", \"ġ\", \"ģ\", \"ǥ\", \"ǧ\", \"ǵ\", \"ɠ\", \"ɡ\", \"ᵍ\", \"ᵷ\", \"ᵹ\", \"ᶃ\", \"ᶢ\", \"ḡ\", \"ｇ\"],\r\n  h: [\r\n    \"h\",\r\n    \"ĥ\",\r\n    \"ħ\",\r\n    \"ƕ\",\r\n    \"ȟ\",\r\n    \"ɥ\",\r\n    \"ɦ\",\r\n    \"ʮ\",\r\n    \"ʯ\",\r\n    \"ʰ\",\r\n    \"ʱ\",\r\n    \"ͪ\",\r\n    \"Һ\",\r\n    \"һ\",\r\n    \"ᑋ\",\r\n    \"ᶣ\",\r\n    \"ḣ\",\r\n    \"ḥ\",\r\n    \"ḧ\",\r\n    \"ḩ\",\r\n    \"ḫ\",\r\n    \"ⱨ\",\r\n    \"ｈ\",\r\n  ],\r\n  i: [\r\n    \"i\",\r\n    \"ì\",\r\n    \"í\",\r\n    \"î\",\r\n    \"ï\",\r\n    \"ĩ\",\r\n    \"ī\",\r\n    \"ĭ\",\r\n    \"į\",\r\n    \"ǐ\",\r\n    \"ȉ\",\r\n    \"ȋ\",\r\n    \"ɨ\",\r\n    \"ͥ\",\r\n    \"ᴉ\",\r\n    \"ᵎ\",\r\n    \"ᵢ\",\r\n    \"ᶖ\",\r\n    \"ᶤ\",\r\n    \"ḭ\",\r\n    \"ḯ\",\r\n    \"ỉ\",\r\n    \"ị\",\r\n    \"ｉ\",\r\n  ],\r\n  j: [\"j\", \"ĵ\", \"ǰ\", \"ɉ\", \"ʝ\", \"ʲ\", \"ᶡ\", \"ᶨ\", \"ｊ\"],\r\n  k: [\"k\", \"ķ\", \"ƙ\", \"ǩ\", \"ʞ\", \"ᵏ\", \"ᶄ\", \"ḱ\", \"ḳ\", \"ḵ\", \"ⱪ\", \"ｋ\"],\r\n  l: [\r\n    \"l\",\r\n    \"ĺ\",\r\n    \"ļ\",\r\n    \"ľ\",\r\n    \"ŀ\",\r\n    \"ł\",\r\n    \"ƚ\",\r\n    \"ȴ\",\r\n    \"ɫ\",\r\n    \"ɬ\",\r\n    \"ɭ\",\r\n    \"ˡ\",\r\n    \"ᶅ\",\r\n    \"ᶩ\",\r\n    \"ᶪ\",\r\n    \"ḷ\",\r\n    \"ḹ\",\r\n    \"ḻ\",\r\n    \"ḽ\",\r\n    \"ℓ\",\r\n    \"ⱡ\",\r\n  ],\r\n  m: [\"m\", \"ɯ\", \"ɰ\", \"ɱ\", \"ͫ\", \"ᴟ\", \"ᵐ\", \"ᵚ\", \"ᵯ\", \"ᶆ\", \"ᶬ\", \"ᶭ\", \"ḿ\", \"ṁ\", \"ṃ\", \"㎡\", \"㎥\", \"ｍ\"],\r\n  n: [\r\n    \"n\",\r\n    \"ñ\",\r\n    \"ń\",\r\n    \"ņ\",\r\n    \"ň\",\r\n    \"ŉ\",\r\n    \"ƞ\",\r\n    \"ǹ\",\r\n    \"ȵ\",\r\n    \"ɲ\",\r\n    \"ɳ\",\r\n    \"ᵰ\",\r\n    \"ᶇ\",\r\n    \"ᶮ\",\r\n    \"ᶯ\",\r\n    \"ṅ\",\r\n    \"ṇ\",\r\n    \"ṉ\",\r\n    \"ṋ\",\r\n    \"ⁿ\",\r\n    \"ｎ\",\r\n  ],\r\n  o: [\r\n    \"o\",\r\n    \"ò\",\r\n    \"ó\",\r\n    \"ô\",\r\n    \"õ\",\r\n    \"ö\",\r\n    \"ø\",\r\n    \"ō\",\r\n    \"ŏ\",\r\n    \"ő\",\r\n    \"ơ\",\r\n    \"ǒ\",\r\n    \"ǫ\",\r\n    \"ǭ\",\r\n    \"ǿ\",\r\n    \"ȍ\",\r\n    \"ȏ\",\r\n    \"ȫ\",\r\n    \"ȭ\",\r\n    \"ȯ\",\r\n    \"ȱ\",\r\n    \"ɵ\",\r\n    \"ͦ\",\r\n    \"о\",\r\n    \"ӧ\",\r\n    \"ө\",\r\n    \"ᴏ\",\r\n    \"ᴑ\",\r\n    \"ᴓ\",\r\n    \"ᴼ\",\r\n    \"ᵒ\",\r\n    \"ᶱ\",\r\n    \"ṍ\",\r\n    \"ṏ\",\r\n    \"ṑ\",\r\n    \"ṓ\",\r\n    \"ọ\",\r\n    \"ỏ\",\r\n    \"ố\",\r\n    \"ồ\",\r\n    \"ổ\",\r\n    \"ỗ\",\r\n    \"ộ\",\r\n    \"ớ\",\r\n    \"ờ\",\r\n    \"ở\",\r\n    \"ỡ\",\r\n    \"ợ\",\r\n    \"ₒ\",\r\n    \"ｏ\",\r\n    \"𐐬\",\r\n  ],\r\n  p: [\"p\", \"ᵖ\", \"ᵱ\", \"ᵽ\", \"ᶈ\", \"ṕ\", \"ṗ\", \"ｐ\"],\r\n  q: [\"q\", \"ɋ\", \"ʠ\", \"ᛩ\", \"ｑ\"],\r\n  r: [\r\n    \"r\",\r\n    \"ŕ\",\r\n    \"ŗ\",\r\n    \"ř\",\r\n    \"ȑ\",\r\n    \"ȓ\",\r\n    \"ɍ\",\r\n    \"ɹ\",\r\n    \"ɻ\",\r\n    \"ʳ\",\r\n    \"ʴ\",\r\n    \"ʵ\",\r\n    \"ͬ\",\r\n    \"ᵣ\",\r\n    \"ᵲ\",\r\n    \"ᶉ\",\r\n    \"ṙ\",\r\n    \"ṛ\",\r\n    \"ṝ\",\r\n    \"ṟ\",\r\n  ],\r\n  s: [\"s\", \"ś\", \"ŝ\", \"ş\", \"š\", \"ș\", \"ʂ\", \"ᔆ\", \"ᶊ\", \"ṡ\", \"ṣ\", \"ṥ\", \"ṧ\", \"ṩ\", \"ｓ\"],\r\n  t: [\r\n    \"t\",\r\n    \"ţ\",\r\n    \"ť\",\r\n    \"ŧ\",\r\n    \"ƫ\",\r\n    \"ƭ\",\r\n    \"ț\",\r\n    \"ʇ\",\r\n    \"ͭ\",\r\n    \"ᵀ\",\r\n    \"ᵗ\",\r\n    \"ᵵ\",\r\n    \"ᶵ\",\r\n    \"ṫ\",\r\n    \"ṭ\",\r\n    \"ṯ\",\r\n    \"ṱ\",\r\n    \"ẗ\",\r\n    \"ｔ\",\r\n  ],\r\n  u: [\r\n    \"u\",\r\n    \"ù\",\r\n    \"ú\",\r\n    \"û\",\r\n    \"ü\",\r\n    \"ũ\",\r\n    \"ū\",\r\n    \"ŭ\",\r\n    \"ů\",\r\n    \"ű\",\r\n    \"ų\",\r\n    \"ư\",\r\n    \"ǔ\",\r\n    \"ǖ\",\r\n    \"ǘ\",\r\n    \"ǚ\",\r\n    \"ǜ\",\r\n    \"ȕ\",\r\n    \"ȗ\",\r\n    \"ͧ\",\r\n    \"ߎ\",\r\n    \"ᵘ\",\r\n    \"ᵤ\",\r\n    \"ṳ\",\r\n    \"ṵ\",\r\n    \"ṷ\",\r\n    \"ṹ\",\r\n    \"ṻ\",\r\n    \"ụ\",\r\n    \"ủ\",\r\n    \"ứ\",\r\n    \"ừ\",\r\n    \"ử\",\r\n    \"ữ\",\r\n    \"ự\",\r\n    \"ｕ\",\r\n  ],\r\n  v: [\"v\", \"ʋ\", \"ͮ\", \"ᵛ\", \"ᵥ\", \"ᶹ\", \"ṽ\", \"ṿ\", \"ⱱ\", \"ｖ\", \"ⱴ\"],\r\n  w: [\"w\", \"ŵ\", \"ʷ\", \"ᵂ\", \"ẁ\", \"ẃ\", \"ẅ\", \"ẇ\", \"ẉ\", \"ẘ\", \"ⱳ\", \"ｗ\"],\r\n  x: [\"x\", \"̽\", \"͓\", \"ᶍ\", \"ͯ\", \"ẋ\", \"ẍ\", \"ₓ\", \"ｘ\"],\r\n  y: [\"y\", \"ý\", \"ÿ\", \"ŷ\", \"ȳ\", \"ɏ\", \"ʸ\", \"ẏ\", \"ỳ\", \"ỵ\", \"ỷ\", \"ỹ\", \"ｙ\"],\r\n  z: [\r\n    \"z\",\r\n    \"ź\",\r\n    \"ż\",\r\n    \"ž\",\r\n    \"ƶ\",\r\n    \"ȥ\",\r\n    \"ɀ\",\r\n    \"ʐ\",\r\n    \"ʑ\",\r\n    \"ᙆ\",\r\n    \"ᙇ\",\r\n    \"ᶻ\",\r\n    \"ᶼ\",\r\n    \"ᶽ\",\r\n    \"ẑ\",\r\n    \"ẓ\",\r\n    \"ẕ\",\r\n    \"ⱬ\",\r\n    \"ｚ\",\r\n  ],\r\n};\r\n\r\n// Precompiled Object with { key = Diacritic, value = real-Character }\r\nconst compiledDiactitics = (function() {\r\n  let x = {};\r\n\r\n  for (let key in diacritics) {\r\n    let ok = diacritics[key];\r\n\r\n    for (let rval in ok) {\r\n      let val = ok[rval];\r\n\r\n      // Do not replace the char with itself\r\n      if (val !== key) {\r\n        x[val] = key;\r\n      }\r\n    }\r\n  }\r\n\r\n  return x;\r\n})();\r\n\r\n// Regex for detecting non-ASCII-Characters in String\r\nconst regexNonASCII = /[^a-z0-9\\s,.-]/;\r\n\r\n/*\r\n * Main function of the module which removes all diacritics from the received text\r\n */\r\nconst diacriticless = (text) => {\r\n  // When there are only ascii-Characters in the string, skip processing and return text right away\r\n  if (text.search(regexNonASCII) === -1) {\r\n    return text;\r\n  }\r\n\r\n  let result = \"\";\r\n\r\n  let len = text.length;\r\n  for (var i = 0; i < len; i++) {\r\n    let searchChar = text.charAt(i);\r\n\r\n    // If applicable replace the diacritic character with the real one or use the original value\r\n    result += searchChar in compiledDiactitics ? compiledDiactitics[searchChar] : searchChar;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport {diacriticless};\r\n","import { diacriticless } from '../utils/diacritics';\r\n\r\nconst escapeRegExp = str => str.replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\nexport default {\r\n  format(x) {\r\n    return x;\r\n  },\r\n  filterPredicate(rowval, filter, skipDiacritics = false, fromDropdown = false) {\r\n    // take care of nulls\r\n    if (typeof rowval === 'undefined' || rowval === null) {\r\n      return false;\r\n    }\r\n\r\n    // row value\r\n    const rowValue = skipDiacritics\r\n      ? String(rowval).toLowerCase()\r\n      : diacriticless(escapeRegExp(String(rowval)).toLowerCase());\r\n\r\n    // search term\r\n    const searchTerm = skipDiacritics\r\n      ? filter.toLowerCase()\r\n      : diacriticless(escapeRegExp(filter).toLowerCase());\r\n\r\n    // comparison\r\n    return fromDropdown ? rowValue === searchTerm : (rowValue.indexOf(searchTerm) > -1);\r\n  },\r\n\r\n  compare(x, y) {\r\n    function cook(d) {\r\n      if (typeof d === 'undefined' || d === null) return '';\r\n      return diacriticless(String(d).toLowerCase());\r\n    }\r\n    x = cook(x);\r\n    y = cook(y);\r\n    if (x < y) return -1;\r\n    if (x > y) return 1;\r\n    return 0;\r\n  },\r\n};\r\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\r\n<div class=\"footer__navigation__page-info\">\r\n  <div v-if=\"infoFn\">\r\n    {{infoFn(infoParams)}}\r\n  </div>\r\n  <form v-else-if=\"mode === 'pages'\" @submit.prevent>\r\n    <label :for=\"id\" class=\"page-info__label\">\r\n      <span>{{pageText}}</span>\r\n      <input\r\n        :id=\"id\"\r\n        aria-describedby=\"change-page-hint\"\r\n        aria-controls=\"vgb-table\"\r\n        class=\"footer__navigation__page-info__current-entry\"\r\n        type=\"text\"\r\n        @keyup.enter.stop=\"changePage\"\r\n        :value=\"currentPage\"> \r\n      <span>{{pageInfo}}</span>\r\n    </label>\r\n    <span id=\"change-page-hint\" style=\"display: none;\">\r\n      Type a page number and press Enter to change the page.\r\n    </span>\r\n  </form>\r\n  <div v-else>\r\n    {{recordInfo}}\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  PAGINATION_MODES,\r\n} from '../utils/constants';\r\n\r\nexport default {\r\n  name: 'VgtPaginationPageInfo',\r\n  props: {\r\n    currentPage: {\r\n      default: 1,\r\n    },\r\n    lastPage: {\r\n      default: 1,\r\n    },\r\n    totalRecords: {\r\n      default: 0,\r\n    },\r\n    ofText: {\r\n      default: 'of',\r\n      type: String,\r\n    },\r\n    pageText: {\r\n      default: 'page',\r\n      type: String,\r\n    },\r\n    currentPerPage: {},\r\n    mode: {\r\n      default: PAGINATION_MODES.Records,\r\n    },\r\n    infoFn: { default: null },\r\n  },\r\n  data() {\r\n    return {\r\n      id: this.getId(),\r\n    };\r\n  },\r\n  computed: {\r\n    pageInfo() {\r\n      return `${this.ofText} ${this.lastPage}`;\r\n    },\r\n    firstRecordOnPage() {\r\n      return ((this.currentPage - 1) * this.currentPerPage) + 1;\r\n    },\r\n    lastRecordOnPage() {\r\n      // if the setting is set to 'all'\r\n      if(this.currentPerPage === -1) {\r\n        return this.totalRecords;\r\n      }\r\n      return Math.min(this.totalRecords, this.currentPage * this.currentPerPage);\r\n    },\r\n    recordInfo() {\r\n      let first = this.firstRecordOnPage;\r\n      const last = this.lastRecordOnPage;\r\n\r\n      if (last === 0) {\r\n        first = 0;\r\n      }\r\n\r\n      return `${first} - ${last} ${this.ofText} ${this.totalRecords}`;\r\n    },\r\n    infoParams() {\r\n      let first = this.firstRecordOnPage;\r\n      const last = this.lastRecordOnPage;\r\n      if (last === 0) {\r\n        first = 0;\r\n      }\r\n      return {\r\n        firstRecordOnPage: first,\r\n        lastRecordOnPage: last,\r\n        totalRecords: this.totalRecords,\r\n        currentPage: this.currentPage,\r\n        totalPage: this.lastPage,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    getId() {\r\n      return `vgt-page-input-${Math.floor(Math.random() * Date.now())}`;\r\n    },\r\n    changePage(event) {\r\n      const value = parseInt(event.target.value, 10);\r\n\r\n      //! invalid number\r\n      if (Number.isNaN(value)\r\n        || value > this.lastPage\r\n        || value < 1) {\r\n        event.target.value = this.currentPage;\r\n        return false;\r\n      }\r\n\r\n      //* valid number\r\n      event.target.value = value;\r\n      this.$emit('page-changed', value);\r\n    },\r\n  },\r\n  mounted() {\r\n  },\r\n  components: {\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n","import {\r\n  DEFAULT_SORT_TYPE,\r\n  SORT_TYPES,\r\n} from './constants';\r\n\r\nfunction getColumnFirstSortType(column) {\r\n  return column.firstSortType || DEFAULT_SORT_TYPE;\r\n}\r\n\r\nfunction getCurrentPrimarySort(sortArray, column) {\r\n  return ( sortArray.length === 1 && sortArray[0].field === column.field )\r\n  ? sortArray[0].type\r\n  : undefined;\r\n}\r\n\r\nfunction getNextSort(currentSort, column) {\r\n  if (SORT_TYPES.Descending === getColumnFirstSortType(column)\r\n    && currentSort === SORT_TYPES.Ascending) {\r\n    return SORT_TYPES.None\r\n  } else if (currentSort === SORT_TYPES.Ascending) {\r\n    return SORT_TYPES.Descending;\r\n  }\r\n  if (SORT_TYPES.Descending === getColumnFirstSortType(column)\r\n    && currentSort === SORT_TYPES.Descending) {\r\n    return SORT_TYPES.Ascending;\r\n  } else if (currentSort === SORT_TYPES.Descending) {\r\n    return SORT_TYPES.None;\r\n  }\r\n\r\n  if (SORT_TYPES.Descending === getColumnFirstSortType(column)\r\n    && currentSort === SORT_TYPES.None) {\r\n    return SORT_TYPES.Descending;\r\n  } else {\r\n    return SORT_TYPES.Ascending;\r\n  }\r\n\r\n}\r\n\r\nfunction getIndex(sortArray, column) {\r\n  for (let i = 0; i < sortArray.length; i++) {\r\n    if (column.field === sortArray[i].field) return i;\r\n  }\r\n  return -1;\r\n}\r\n\r\nconst primarySort = (sortArray, column) => {\r\n  const currentPrimarySort = getCurrentPrimarySort(sortArray, column);\r\n  const nextPrimarySort = getNextSort(currentPrimarySort, column);\r\n  return [{\r\n    field: column.field,\r\n    type: currentPrimarySort ? nextPrimarySort : getColumnFirstSortType(column),\r\n  }];\r\n};\r\n\r\nconst secondarySort = (sortArray, column) => {\r\n  const index = getIndex(sortArray, column);\r\n  if (index === -1) {\r\n    sortArray.push({\r\n      field: column.field,\r\n      type: getColumnFirstSortType(column),\r\n    });\r\n  } else {\r\n    sortArray[index].type = getNextSort(sortArray[index].type, column);\r\n  }\r\n  return sortArray;\r\n};\r\n\r\nexport {\r\n  primarySort,\r\n  secondarySort,\r\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import { format, parse, isValid, compareAsc } from \"date-fns\";\r\nimport def from \"./default\";\r\nconst date = Object.assign({}, def);\r\n\r\ndate.isRight = true;\r\n\r\ndate.compare = function(x, y, column) {\r\n  function cook(d) {\r\n    if (column && column.dateInputFormat) {\r\n      return parse(`${d}`, `${column.dateInputFormat}`, new Date());\r\n    }\r\n    return d;\r\n  }\r\n  x = cook(x);\r\n  y = cook(y);\r\n  if (!isValid(x)) {\r\n    return -1;\r\n  }\r\n  if (!isValid(y)) {\r\n    return 1;\r\n  }\r\n  return compareAsc(x, y);\r\n};\r\n\r\ndate.format = function(v, column) {\r\n  if (v === undefined || v === null) return \"\";\r\n  let date;\r\n\r\n  if (column.convertUtcToLocal) {\r\n    const localDate = new Date(v + \" UTC\");\r\n    date = parse(\r\n      format(localDate, column.dateInputFormat),\r\n      column.dateInputFormat,\r\n      new Date()\r\n    );\r\n  } else {\r\n    date = parse(v, column.dateInputFormat, new Date());\r\n  }\r\n\r\n  if (isValid(date)) {\r\n    return format(date, column.dateOutputFormat);\r\n  } else {\r\n    console.error(`Not a valid date: \"${v}\"`);\r\n    return \"Invalid date format\";\r\n  }\r\n};\r\n\r\nexport default date;\r\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import def from './default';\r\n\r\nconst number = Object.assign({}, def);\r\n\r\nnumber.isRight = true;\r\n\r\nnumber.filterPredicate = function (rowval, filter) {\r\n  return number.compare(rowval, filter) === 0;\r\n};\r\n\r\n\r\nnumber.compare = function (x, y) {\r\n  function cook(d) {\r\n    // if d is null or undefined we give it the smallest\r\n    // possible value\r\n    if (d === undefined || d === null) return -Infinity;\r\n    return d.indexOf('.') >= 0 ? parseFloat(d) : parseInt(d, 10);\r\n  }\r\n\r\n  x = typeof x === 'number' ? x : cook(x);\r\n  y = typeof y === 'number' ? y : cook(y);\r\n  if (x < y) return -1;\r\n  if (x > y) return 1;\r\n  return 0;\r\n};\r\n\r\nexport default number;\r\n","import number from './number';\r\n\r\nconst decimal = Object.assign({}, number);\r\n\r\ndecimal.format = function (v) {\r\n  if (v === undefined || v === null) return '';\r\n  return parseFloat(Math.round(v * 100) / 100).toFixed(2);\r\n};\r\n\r\nexport default decimal;\r\n","import number from './number';\r\n\r\nconst percentage = Object.assign({}, number);\r\n\r\npercentage.format = function (v) {\r\n  if (v === undefined || v === null) return '';\r\n  return `${parseFloat(v * 100).toFixed(2)}%`;\r\n};\r\n\r\nexport default percentage;\r\n","import def from './default';\r\n\r\nconst boolean = Object.assign({}, def);\r\n\r\nboolean.isRight = true;\r\n\r\nboolean.filterPredicate = function (rowval, filter) {\r\n  return boolean.compare(rowval, filter) === 0;\r\n};\r\n\r\n\r\nboolean.compare = function (x, y) {\r\n  function cook(d) {\r\n    if (typeof d === 'boolean') return d ? 1 : 0;\r\n    if (typeof d === 'string') return d === 'true' ? 1 : 0;\r\n    return -Infinity;\r\n  }\r\n\r\n  x = cook(x);\r\n  y = cook(y);\r\n  if (x < y) return -1;\r\n  if (x > y) return 1;\r\n  return 0;\r\n};\r\n\r\nexport default boolean;\r\n","import * as date from './date';\r\nimport * as decimal from './decimal';\r\nimport * as number from './number';\r\nimport * as percentage from './percentage';\r\nimport * as boolean from './boolean';\r\n\r\nexport default {\r\n  date,\r\n  decimal,\r\n  number,\r\n  percentage,\r\n  boolean,\r\n};\r\n","<template>\r\n  <div\r\n    :class=\"wrapStyleClasses\">\r\n    <div v-if=\"isLoading\" class=\"vgt-loading vgt-center-align\">\r\n      <slot name=\"loadingContent\">\r\n        <span class=\"vgt-loading__content\">\r\n          Loading...\r\n        </span>\r\n      </slot>\r\n    </div>\r\n    <div class=\"vgt-inner-wrap\"\r\n      :class=\"{'is-loading': isLoading}\">\r\n      <slot\r\n        v-if=\"paginate && paginateOnTop\"\r\n        name=\"pagination-top\"\r\n        :pageChanged=\"pageChanged\"\r\n        :perPageChanged=\"perPageChanged\"\r\n        :total=\"totalRows || totalRowCount\"\r\n      >\r\n        <vgt-pagination\r\n          ref=\"paginationTop\"\r\n          @page-changed=\"pageChanged\"\r\n          @per-page-changed=\"perPageChanged\"\r\n          :perPage=\"perPage\"\r\n          :rtl=\"rtl\"\r\n          :total=\"totalRows || totalRowCount\"\r\n          :mode=\"paginationMode\"\r\n          :jumpFirstOrLast=\"paginationOptions.jumpFirstOrLast\"\r\n          :firstText=\"firstText\"\r\n          :lastText=\"lastText\"\r\n          :nextText=\"nextText\"\r\n          :prevText=\"prevText\"\r\n          :rowsPerPageText=\"rowsPerPageText\"\r\n          :perPageDropdownEnabled=\"paginationOptions.perPageDropdownEnabled\"\r\n          :customRowsPerPageDropdown=\"customRowsPerPageDropdown\"\r\n          :paginateDropdownAllowAll=\"paginateDropdownAllowAll\"\r\n          :ofText=\"ofText\"\r\n          :pageText=\"pageText\"\r\n          :allText=\"allText\"\r\n          :info-fn=\"paginationInfoFn\"\r\n        ></vgt-pagination>\r\n      </slot>\r\n      <vgt-global-search\r\n        @on-keyup=\"searchTableOnKeyUp\"\r\n        @on-enter=\"searchTableOnEnter\"\r\n        v-model=\"globalSearchTerm\"\r\n        :search-enabled=\"searchEnabled && externalSearchQuery == null\"\r\n        :global-search-placeholder=\"searchPlaceholder\"\r\n      >\r\n        <template slot=\"internal-table-actions\">\r\n          <slot name=\"table-actions\">\r\n          </slot>\r\n        </template>\r\n      </vgt-global-search>\r\n      <div\r\n        v-if=\"selectedRowCount && !disableSelectInfo\"\r\n        class=\"vgt-selection-info-row clearfix\"\r\n        :class=\"selectionInfoClass\"\r\n      >\r\n        {{selectionInfo}}\r\n        <a\r\n          href=\"\"\r\n          @click.prevent=\"unselectAllInternal(true)\"\r\n        >\r\n          {{clearSelectionText}}\r\n        </a>\r\n        <div class=\"vgt-selection-info-row__actions vgt-pull-right\">\r\n          <slot name=\"selected-row-actions\">\r\n          </slot>\r\n        </div>\r\n      </div>\r\n      <div class=\"vgt-fixed-header\">\r\n        <table\r\n          id=\"vgt-table\"\r\n          v-if=\"fixedHeader\"\r\n          :class=\"tableStyleClasses\"\r\n        >\r\n        <colgroup>\r\n          <col v-for=\"(column, index) in columns\" :key=\"index\" :id=\"`col-${index}`\">\r\n        </colgroup>\r\n          <!-- Table header -->\r\n          <thead\r\n            is=\"vgt-table-header\"\r\n            ref=\"table-header-secondary\"\r\n            @on-toggle-select-all=\"toggleSelectAll\"\r\n            @on-sort-change=\"changeSort\"\r\n            @filter-changed=\"filterRows\"\r\n            :columns=\"columns\"\r\n            :line-numbers=\"lineNumbers\"\r\n            :selectable=\"selectable\"\r\n            :all-selected=\"allSelected\"\r\n            :all-selected-indeterminate=\"allSelectedIndeterminate\"\r\n            :mode=\"mode\"\r\n            :sortable=\"sortable\"\r\n            :multiple-column-sort=\"multipleColumnSort\"\r\n            :typed-columns=\"typedColumns\"\r\n            :getClasses=\"getClasses\"\r\n            :searchEnabled=\"searchEnabled\"\r\n            :paginated=\"paginated\"\r\n            :table-ref=\"$refs.table\"\r\n          >\r\n            <template\r\n              slot=\"table-column\"\r\n              slot-scope=\"props\"\r\n            >\r\n              <slot\r\n                name=\"table-column\"\r\n                :column=\"props.column\"\r\n              >\r\n                <span>{{props.column.label}}</span>\r\n              </slot>\r\n            </template>\r\n            <template\r\n                slot=\"column-filter\"\r\n                slot-scope=\"props\"\r\n            >\r\n              <slot\r\n                  name=\"column-filter\"\r\n                  :column=\"props.column\"\r\n                  :updateFilters=\"props.updateFilters\"\r\n              ></slot>\r\n            </template>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n      <div\r\n        :class=\"{'vgt-responsive': responsive}\"\r\n        :style=\"wrapperStyles\"\r\n      >\r\n        <table\r\n          id=\"vgt-table\"\r\n          ref=\"table\"\r\n          :class=\"tableStyles\"\r\n        >\r\n        <colgroup>\r\n          <col v-for=\"(column, index) in columns\" :key=\"index\" :id=\"`col-${index}`\">\r\n        </colgroup>\r\n          <!-- Table header -->\r\n          <thead\r\n            is=\"vgt-table-header\"\r\n            ref=\"table-header-primary\"\r\n            @on-toggle-select-all=\"toggleSelectAll\"\r\n            @on-sort-change=\"changeSort\"\r\n            @filter-changed=\"filterRows\"\r\n            :columns=\"columns\"\r\n            :line-numbers=\"lineNumbers\"\r\n            :selectable=\"selectable\"\r\n            :all-selected=\"allSelected\"\r\n            :all-selected-indeterminate=\"allSelectedIndeterminate\"\r\n            :mode=\"mode\"\r\n            :sortable=\"sortable\"\r\n            :multiple-column-sort=\"multipleColumnSort\"\r\n            :typed-columns=\"typedColumns\"\r\n            :getClasses=\"getClasses\"\r\n            :searchEnabled=\"searchEnabled\"\r\n          >\r\n            <template\r\n              slot=\"table-column\"\r\n              slot-scope=\"props\"\r\n            >\r\n              <slot\r\n                name=\"table-column\"\r\n                :column=\"props.column\"\r\n              >\r\n                <span>{{props.column.label}}</span>\r\n              </slot>\r\n            </template>\r\n            <template\r\n              slot=\"column-filter\"\r\n              slot-scope=\"props\"\r\n            >\r\n              <slot\r\n                name=\"column-filter\"\r\n                :column=\"props.column\"\r\n                :updateFilters=\"props.updateFilters\"\r\n              ></slot>\r\n            </template>\r\n          </thead>\r\n\r\n          <!-- Table body starts here -->\r\n          <tbody\r\n            v-for=\"(headerRow, hIndex) in paginated\"\r\n            :key=\"hIndex\"\r\n          >\r\n            <!-- if group row header is at the top -->\r\n            <vgt-header-row\r\n              v-if=\"groupHeaderOnTop\"\r\n              @vgtExpand=\"toggleExpand(headerRow[rowKeyField])\"\r\n              :header-row=\"headerRow\"\r\n              :columns=\"columns\"\r\n              :line-numbers=\"lineNumbers\"\r\n              :selectable=\"selectable\"\r\n              :select-all-by-group=\"selectAllByGroup\"\r\n              :collapsable=\"groupOptions.collapsable\"\r\n              :collect-formatted=\"collectFormatted\"\r\n              :formatted-row=\"formattedRow\"\r\n              :class=\"getRowStyleClass(headerRow)\"\r\n              :get-classes=\"getClasses\"\r\n              :full-colspan=\"fullColspan\"\r\n              :groupIndex=\"hIndex\"\r\n              @on-select-group-change=\"toggleSelectGroup($event, headerRow)\"\r\n            >\r\n              <template\r\n                v-if=\"hasHeaderRowTemplate\"\r\n                slot=\"table-header-row\"\r\n                slot-scope=\"props\"\r\n              >\r\n                <slot\r\n                  name=\"table-header-row\"\r\n                  :column=\"props.column\"\r\n                  :formattedRow=\"props.formattedRow\"\r\n                  :row=\"props.row\"\r\n                >\r\n                </slot>\r\n              </template>\r\n            </vgt-header-row>\r\n            <!-- normal rows here. we loop over all rows -->\r\n            <tr\r\n              v-if=\"groupOptions.collapsable ? headerRow.vgtIsExpanded : true\"\r\n              v-for=\"(row, index) in headerRow.children\"\r\n              :key=\"row.originalIndex\"\r\n              :class=\"getRowStyleClass(row)\"\r\n              @mouseenter=\"onMouseenter(row, index)\"\r\n              @mouseleave=\"onMouseleave(row, index)\"\r\n              @dblclick=\"onRowDoubleClicked(row, index, $event)\"\r\n              @click=\"onRowClicked(row, index, $event)\"\r\n              @auxclick=\"onRowAuxClicked(row, index, $event)\">\r\n              <th\r\n                v-if=\"lineNumbers\"\r\n                class=\"line-numbers\"\r\n              >\r\n                {{ getCurrentIndex(row.originalIndex) }}\r\n              </th>\r\n              <th\r\n                v-if=\"selectable\"\r\n                @click.stop=\"onCheckboxClicked(row, index, $event)\"\r\n                class=\"vgt-checkbox-col\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  :disabled=\"row.vgtDisabled\"\r\n                  :checked=\"row.vgtSelected\"\r\n                />\r\n              </th>\r\n              <td\r\n                @click=\"onCellClicked(row, column, index, $event)\"\r\n                v-for=\"(column, i) in columns\"\r\n                :key=\"i\"\r\n                :class=\"getClasses(i, 'td', row)\"\r\n                v-if=\"!column.hidden && column.field\"\r\n                v-bind:data-label=\"compactMode ? column.label : undefined\"\r\n              >\r\n                <slot\r\n                  name=\"table-row\"\r\n                  :row=\"row\"\r\n                  :column=\"column\"\r\n                  :formattedRow=\"formattedRow(row)\"\r\n                  :index=\"index\"\r\n                >\r\n                  <span v-if=\"!column.html\">\r\n                    {{ collectFormatted(row, column) }}\r\n                  </span>\r\n                  <span v-else v-html=\"collect(row, column.field)\">\r\n                  </span>\r\n                </slot>\r\n              </td>\r\n            </tr>\r\n            <!-- if group row header is at the bottom -->\r\n            <vgt-header-row\r\n              v-if=\"groupHeaderOnBottom\"\r\n              :header-row=\"headerRow\"\r\n              :columns=\"columns\"\r\n              :line-numbers=\"lineNumbers\"\r\n              :selectable=\"selectable\"\r\n              :select-all-by-group=\"selectAllByGroup\"\r\n              :collect-formatted=\"collectFormatted\"\r\n              :formatted-row=\"formattedRow\"\r\n              :get-classes=\"getClasses\"\r\n              :full-colspan=\"fullColspan\"\r\n              :groupIndex=\"index\"\r\n              @on-select-group-change=\"toggleSelectGroup($event, headerRow)\"\r\n            >\r\n              <template\r\n                v-if=\"hasHeaderRowTemplate\"\r\n                slot=\"table-header-row\"\r\n                slot-scope=\"props\"\r\n              >\r\n                <slot\r\n                  name=\"table-header-row\"\r\n                  :column=\"props.column\"\r\n                  :formattedRow=\"props.formattedRow\"\r\n                  :row=\"props.row\"\r\n                >\r\n                </slot>\r\n              </template>\r\n            </vgt-header-row>\r\n          </tbody>\r\n\r\n          <tbody v-if=\"showEmptySlot\">\r\n            <tr>\r\n              <td :colspan=\"fullColspan\">\r\n                <slot name=\"emptystate\">\r\n                  <div class=\"vgt-center-align vgt-text-disabled\">\r\n                    No data for table\r\n                  </div>\r\n                </slot>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div v-if=\"hasFooterSlot\" class=\"vgt-wrap__actions-footer\">\r\n        <slot name=\"table-actions-bottom\">\r\n        </slot>\r\n      </div>\r\n      <slot\r\n        v-if=\"paginate && paginateOnBottom\"\r\n        name=\"pagination-bottom\"\r\n        :pageChanged=\"pageChanged\"\r\n        :perPageChanged=\"perPageChanged\"\r\n        :total=\"totalRows || totalRowCount\"\r\n      >\r\n        <vgt-pagination\r\n          ref=\"paginationBottom\"\r\n          @page-changed=\"pageChanged\"\r\n          @per-page-changed=\"perPageChanged\"\r\n          :perPage=\"perPage\"\r\n          :rtl=\"rtl\"\r\n          :total=\"totalRows || totalRowCount\"\r\n          :mode=\"paginationMode\"\r\n          :jumpFirstOrLast=\"paginationOptions.jumpFirstOrLast\"\r\n          :firstText=\"firstText\"\r\n          :lastText=\"lastText\"\r\n          :nextText=\"nextText\"\r\n          :prevText=\"prevText\"\r\n          :rowsPerPageText=\"rowsPerPageText\"\r\n          :perPageDropdownEnabled=\"paginationOptions.perPageDropdownEnabled\"\r\n          :customRowsPerPageDropdown=\"customRowsPerPageDropdown\"\r\n          :paginateDropdownAllowAll=\"paginateDropdownAllowAll\"\r\n          :ofText=\"ofText\"\r\n          :pageText=\"pageText\"\r\n          :allText=\"allText\"\r\n          :info-fn=\"paginationInfoFn\"\r\n        ></vgt-pagination>\r\n      </slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  DEFAULT_SORT_TYPE,\r\n  SORT_TYPES,\r\n} from './utils/constants';\r\nimport isEqual from 'lodash.isequal';\r\nimport defaultType from './types/default';\r\nimport VgtPagination from './pagination/VgtPagination.vue';\r\nimport VgtGlobalSearch from './VgtGlobalSearch.vue';\r\nimport VgtTableHeader from './VgtTableHeader.vue';\r\nimport VgtHeaderRow from './VgtHeaderRow.vue';\r\n\r\n// here we load each data type module.\r\nimport * as CoreDataTypes from './types/index';\r\n\r\nconst dataTypes = {};\r\nconst coreDataTypes = CoreDataTypes.default;\r\nObject.keys(coreDataTypes).forEach((key) => {\r\n  const compName = key.replace(/^\\.\\//, '').replace(/\\.js/, '');\r\n  dataTypes[compName] = coreDataTypes[key].default;\r\n});\r\n\r\nexport default {\r\n  name: 'vue-good-table',\r\n  props: {\r\n    isLoading: { default: null, type: Boolean },\r\n    maxHeight: { default: null, type: String },\r\n    fixedHeader: Boolean ,\r\n    theme: { default: '' },\r\n    mode: { default: 'local' }, // could be remote\r\n    totalRows: {}, // required if mode = 'remote'\r\n    styleClass: { default: 'vgt-table bordered' },\r\n    columns: {},\r\n    rows: {},\r\n    lineNumbers: Boolean,\r\n    responsive: { default: true , type: Boolean },\r\n    rtl: Boolean,\r\n    rowStyleClass: { default: null, type: [Function, String] },\r\n    compactMode: Boolean,\r\n\r\n    groupOptions: {\r\n      default() {\r\n        return {\r\n          enabled: false,\r\n          collapsable: false,\r\n          rowKey: null\r\n        };\r\n      },\r\n    },\r\n\r\n    selectOptions: {\r\n      default() {\r\n        return {\r\n          enabled: false,\r\n          selectionInfoClass: '',\r\n          selectionText: 'rows selected',\r\n          clearSelectionText: 'clear',\r\n          disableSelectInfo: false,\r\n          selectAllByGroup: false,\r\n        };\r\n      },\r\n    },\r\n\r\n    // sort\r\n    sortOptions: {\r\n      default() {\r\n        return {\r\n          enabled: true,\r\n          multipleColumns: true,\r\n          initialSortBy: {},\r\n        };\r\n      },\r\n    },\r\n\r\n    // pagination\r\n    paginationOptions: {\r\n      default() {\r\n        return {\r\n          enabled: false,\r\n          position: 'bottom',\r\n          perPage: 10,\r\n          perPageDropdown: null,\r\n          perPageDropdownEnabled: true,\r\n          position: 'bottom',\r\n          dropdownAllowAll: true,\r\n          mode: 'records', // or pages\r\n          infoFn: null,\r\n          jumpFirstOrLast : false\r\n        };\r\n      },\r\n    },\r\n\r\n    searchOptions: {\r\n      default() {\r\n        return {\r\n          enabled: false,\r\n          trigger: null,\r\n          externalQuery: null,\r\n          searchFn: null,\r\n          placeholder: 'Search Table',\r\n        };\r\n      },\r\n    },\r\n  },\r\n\r\n  data: () => ({\r\n    // loading state for remote mode\r\n    tableLoading: false,\r\n\r\n    // text options\r\n    firstText: \"First\",\r\n    lastText: \"Last\",\r\n    nextText: 'Next',\r\n    prevText: 'Previous',\r\n    rowsPerPageText: 'Rows per page',\r\n    ofText: 'of',\r\n    allText: 'All',\r\n    pageText: 'page',\r\n\r\n    // internal select options\r\n    selectable: false,\r\n    selectOnCheckboxOnly: false,\r\n    selectAllByPage: true,\r\n    disableSelectInfo: false,\r\n    selectionInfoClass: '',\r\n    selectionText: 'rows selected',\r\n    clearSelectionText: 'clear',\r\n\r\n    // keys for rows that are currently expanded\r\n    maintainExpanded: true,\r\n    expandedRowKeys: new Set(),\r\n\r\n    // internal sort options\r\n    sortable: true,\r\n    defaultSortBy: null,\r\n    multipleColumnSort: true,\r\n\r\n    // internal search options\r\n    searchEnabled: false,\r\n    searchTrigger: null,\r\n    externalSearchQuery: null,\r\n    searchFn: null,\r\n    searchPlaceholder: 'Search Table',\r\n    searchSkipDiacritics: false,\r\n\r\n    // internal pagination options\r\n    perPage: null,\r\n    paginate: false,\r\n    paginateOnTop: false,\r\n    paginateOnBottom: true,\r\n    customRowsPerPageDropdown: [],\r\n    paginateDropdownAllowAll: true,\r\n    paginationMode: 'records',\r\n    paginationInfoFn: null,\r\n\r\n    currentPage: 1,\r\n    currentPerPage: 10,\r\n    sorts: [],\r\n    globalSearchTerm: '',\r\n    filteredRows: [],\r\n    columnFilters: {},\r\n    forceSearch: false,\r\n    sortChanged: false,\r\n    dataTypes: dataTypes || {},\r\n  }),\r\n\r\n  watch: {\r\n    rows: {\r\n      handler() {\r\n        this.$emit('update:isLoading', false);\r\n        this.filterRows(this.columnFilters, false);\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n\r\n    selectOptions: {\r\n      handler() {\r\n        this.initializeSelect();\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n\r\n    paginationOptions: {\r\n      handler(newValue, oldValue) {\r\n        if (!isEqual(newValue, oldValue)) {\r\n          this.initializePagination();\r\n        }\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n\r\n    searchOptions: {\r\n      handler() {\r\n        if (\r\n          this.searchOptions.externalQuery !== undefined &&\r\n          this.searchOptions.externalQuery !== this.searchTerm\r\n        ) {\r\n          //* we need to set searchTerm to externalQuery first.\r\n          this.externalSearchQuery = this.searchOptions.externalQuery;\r\n          this.handleSearch();\r\n        }\r\n        this.initializeSearch();\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n\r\n    sortOptions: {\r\n      handler(newValue, oldValue) {\r\n        if (!isEqual(newValue, oldValue)) {\r\n          this.initializeSort();\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n\r\n    selectedRows(newValue, oldValue) {\r\n      if (!isEqual(newValue, oldValue)) {\r\n        this.$emit('on-selected-rows-change', {\r\n          selectedRows: this.selectedRows,\r\n        });\r\n      }\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    tableStyles() {\r\n      if (this.compactMode)\r\n        return this.tableStyleClasses + 'vgt-compact'\r\n      else\r\n        return this.tableStyleClasses\r\n    },\r\n    hasFooterSlot() {\r\n      return !!this.$slots['table-actions-bottom'];\r\n    },\r\n    wrapperStyles() {\r\n      return {\r\n        overflow: 'scroll-y',\r\n        maxHeight: this.maxHeight ? this.maxHeight : 'auto',\r\n      };\r\n    },\r\n\r\n    rowKeyField() {\r\n      return this.groupOptions.rowKey || 'vgt_header_id';\r\n    },\r\n\r\n    hasHeaderRowTemplate() {\r\n      return (\r\n        !!this.$slots['table-header-row'] ||\r\n        !!this.$scopedSlots['table-header-row']\r\n      );\r\n    },\r\n\r\n    showEmptySlot() {\r\n      if (!this.paginated.length) return true;\r\n\r\n      if (\r\n        this.paginated[0].label === 'no groups' &&\r\n        !this.paginated[0].children.length\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    allSelected() {\r\n      return (\r\n        this.selectedRowCount > 0 &&\r\n        ((this.selectAllByPage &&\r\n          this.selectedPageRowsCount === this.totalPageRowCount) ||\r\n          (!this.selectAllByPage &&\r\n            this.selectedRowCount === this.totalRowCount))\r\n      );\r\n    },\r\n\r\n    allSelectedIndeterminate() {\r\n      return (\r\n        !this.allSelected &&\r\n        ((this.selectAllByPage && this.selectedPageRowsCount > 0) ||\r\n          (!this.selectAllByPage && this.selectedRowCount > 0))\r\n      );\r\n    },\r\n\r\n    selectionInfo() {\r\n      return `${this.selectedRowCount} ${this.selectionText}`;\r\n    },\r\n\r\n    selectedRowCount() {\r\n      return this.selectedRows.length;\r\n    },\r\n\r\n    selectedPageRowsCount() {\r\n      return this.selectedPageRows.length;\r\n    },\r\n\r\n    selectedPageRows() {\r\n      const selectedRows = [];\r\n      this.paginated.forEach((headerRow) => {\r\n        headerRow.children.forEach((row) => {\r\n          if (row.vgtSelected) {\r\n            selectedRows.push(row);\r\n          }\r\n        });\r\n      });\r\n      return selectedRows;\r\n    },\r\n\r\n    selectedRows() {\r\n      const selectedRows = [];\r\n      this.processedRows.forEach((headerRow) => {\r\n        headerRow.children.forEach((row) => {\r\n          if (row.vgtSelected) {\r\n            selectedRows.push(row);\r\n          }\r\n        });\r\n      });\r\n      return selectedRows.sort((r1, r2) => r1.originalIndex - r2.originalIndex);\r\n    },\r\n\r\n    fullColspan() {\r\n      let fullColspan = 0;\r\n      for (let i = 0; i < this.columns.length; i += 1) {\r\n        if (!this.columns[i].hidden) {\r\n          fullColspan += 1;\r\n        }\r\n      }\r\n      if (this.lineNumbers) fullColspan++;\r\n      if (this.selectable) fullColspan++;\r\n      return fullColspan;\r\n    },\r\n    groupHeaderOnTop() {\r\n      if (\r\n        this.groupOptions &&\r\n        this.groupOptions.enabled &&\r\n        this.groupOptions.headerPosition &&\r\n        this.groupOptions.headerPosition === 'bottom'\r\n      ) {\r\n        return false;\r\n      }\r\n      if (this.groupOptions && this.groupOptions.enabled) return true;\r\n\r\n      // will only get here if groupOptions is false\r\n      return false;\r\n    },\r\n    groupHeaderOnBottom() {\r\n      if (\r\n        this.groupOptions &&\r\n        this.groupOptions.enabled &&\r\n        this.groupOptions.headerPosition &&\r\n        this.groupOptions.headerPosition === 'bottom'\r\n      ) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    totalRowCount() {\r\n      const total = this.processedRows.reduce((total, headerRow) => {\r\n        const childrenCount = headerRow.children ? headerRow.children.length : 0;\r\n        return total + childrenCount;\r\n      }, 0);\r\n      return total;\r\n    },\r\n    totalPageRowCount() {\r\n      const total = this.paginated.reduce((total, headerRow) => {\r\n        const childrenCount = headerRow.children ? headerRow.children.length : 0;\r\n        return total + childrenCount;\r\n      }, 0);\r\n      return total;\r\n    },\r\n    wrapStyleClasses() {\r\n      let classes = 'vgt-wrap';\r\n      if (this.rtl) classes += ' rtl';\r\n      classes += ` ${this.theme}`;\r\n      return classes;\r\n    },\r\n    tableStyleClasses() {\r\n      let classes = this.styleClass;\r\n      classes += ` ${this.theme}`;\r\n      return classes;\r\n    },\r\n\r\n    searchTerm() {\r\n      return this.externalSearchQuery != null\r\n        ? this.externalSearchQuery\r\n        : this.globalSearchTerm;\r\n    },\r\n\r\n    //\r\n    globalSearchAllowed() {\r\n      if (\r\n        this.searchEnabled &&\r\n        !!this.globalSearchTerm &&\r\n        this.searchTrigger !== 'enter'\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      if (this.externalSearchQuery != null && this.searchTrigger !== 'enter') {\r\n        return true;\r\n      }\r\n\r\n      if (this.forceSearch) {\r\n        this.forceSearch = false;\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    },\r\n\r\n    // this is done everytime sortColumn\r\n    // or sort type changes\r\n    //----------------------------------------\r\n    processedRows() {\r\n      // we only process rows when mode is local\r\n      let computedRows = this.filteredRows;\r\n      if (this.mode === 'remote') {\r\n        return computedRows;\r\n      }\r\n\r\n      // take care of the global filter here also\r\n      if (this.globalSearchAllowed) {\r\n        // here also we need to de-construct and then\r\n        // re-construct the rows.\r\n        const allRows = [];\r\n        this.filteredRows.forEach((headerRow) => {\r\n          allRows.push(...headerRow.children);\r\n        });\r\n        const filteredRows = [];\r\n        allRows.forEach((row) => {\r\n          for (let i = 0; i < this.columns.length; i += 1) {\r\n            const col = this.columns[i];\r\n            // if col does not have search disabled,\r\n            if (!col.globalSearchDisabled) {\r\n              // if a search function is provided,\r\n              // use that for searching, otherwise,\r\n              // use the default search behavior\r\n              if (this.searchFn) {\r\n                const foundMatch = this.searchFn(\r\n                  row,\r\n                  col,\r\n                  this.collectFormatted(row, col),\r\n                  this.searchTerm\r\n                );\r\n                if (foundMatch) {\r\n                  filteredRows.push(row);\r\n                  break; // break the loop\r\n                }\r\n              } else {\r\n                // comparison\r\n                const matched = defaultType.filterPredicate(\r\n                  this.collectFormatted(row, col),\r\n                  this.searchTerm,\r\n                  this.searchSkipDiacritics\r\n                );\r\n                if (matched) {\r\n                  filteredRows.push(row);\r\n                  break; // break loop\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        // this is where we emit on search\r\n        this.$emit('on-search', {\r\n          searchTerm: this.searchTerm,\r\n          rowCount: filteredRows.length,\r\n        });\r\n\r\n        // here we need to reconstruct the nested structure\r\n        // of rows\r\n        computedRows = [];\r\n        this.filteredRows.forEach((headerRow) => {\r\n          const i = headerRow.vgt_header_id;\r\n          const children = filteredRows.filter((r) => r.vgt_id === i);\r\n          if (children.length) {\r\n            const newHeaderRow = JSON.parse(JSON.stringify(headerRow));\r\n            newHeaderRow.children = children;\r\n            computedRows.push(newHeaderRow);\r\n          }\r\n        });\r\n      }\r\n      if (this.sorts.length) {\r\n        //* we need to sort\r\n        computedRows.forEach((cRows) => {\r\n          cRows.children.sort((xRow, yRow) => {\r\n            //* we need to get column for each sort\r\n            let sortValue;\r\n            for (let i = 0; i < this.sorts.length; i += 1) {\r\n              const srt = this.sorts[i];\r\n\r\n              if (srt.type === SORT_TYPES.None) {\r\n                //* if no sort, we need to use the original index to sort.\r\n                sortValue = sortValue || (xRow.originalIndex - yRow.originalIndex);\r\n              } else{\r\n                const column = this.getColumnForField(srt.field);\r\n                const xvalue = this.collect(xRow, srt.field);\r\n                const yvalue = this.collect(yRow, srt.field);\r\n  \r\n                //* if a custom sort function has been provided we use that\r\n                const { sortFn } = column;\r\n                if (sortFn && typeof sortFn === 'function') {\r\n                  sortValue =\r\n                    sortValue ||\r\n                    sortFn(xvalue, yvalue, column, xRow, yRow) *\r\n                      (srt.type === SORT_TYPES.Descending ? -1 : 1);\r\n                } else {\r\n                  //* else we use our own sort\r\n                  sortValue =\r\n                    sortValue ||\r\n                    column.typeDef.compare(xvalue, yvalue, column) *\r\n                      (srt.type === SORT_TYPES.Descending ? -1 : 1);\r\n                }\r\n              }\r\n            }\r\n            return sortValue;\r\n          });\r\n        });\r\n      }\r\n\r\n      // if the filtering is event based, we need to maintain filter\r\n      // rows\r\n      if (this.searchTrigger === 'enter') {\r\n        this.filteredRows = computedRows;\r\n      }\r\n\r\n      return computedRows;\r\n    },\r\n\r\n    paginated() {\r\n      if (!this.processedRows.length) return [];\r\n\r\n      if (this.mode === 'remote') {\r\n        return this.processedRows;\r\n      }\r\n\r\n      //* flatten the rows for paging.\r\n      let paginatedRows = [];\r\n      this.processedRows.forEach((childRows) => {\r\n        //* only add headers when group options are enabled.\r\n        if (this.groupOptions.enabled) {\r\n          paginatedRows.push(childRows);\r\n        }\r\n        paginatedRows.push(...childRows.children);\r\n      });\r\n\r\n      if (this.paginate) {\r\n        let pageStart = (this.currentPage - 1) * this.currentPerPage;\r\n\r\n        // in case of filtering we might be on a page that is\r\n        // not relevant anymore\r\n        // also, if setting to all, current page will not be valid\r\n        if (pageStart >= paginatedRows.length || this.currentPerPage === -1) {\r\n          this.currentPage = 1;\r\n          pageStart = 0;\r\n        }\r\n\r\n        // calculate page end now\r\n        let pageEnd = paginatedRows.length + 1;\r\n\r\n        // if the setting is not set to 'all'\r\n        if (this.currentPerPage !== -1) {\r\n          pageEnd = this.currentPage * this.currentPerPage;\r\n        }\r\n\r\n        paginatedRows = paginatedRows.slice(pageStart, pageEnd);\r\n      }\r\n      // reconstruct paginated rows here\r\n      const reconstructedRows = [];\r\n      paginatedRows.forEach((flatRow) => {\r\n        //* header row?\r\n        if (flatRow.vgt_header_id !== undefined) {\r\n          this.handleExpanded(flatRow);\r\n          const newHeaderRow = JSON.parse(JSON.stringify(flatRow));\r\n          newHeaderRow.children = [];\r\n          reconstructedRows.push(newHeaderRow);\r\n        } else {\r\n          //* child row\r\n          let hRow = reconstructedRows.find(r => r.vgt_header_id === flatRow.vgt_id);\r\n          if (!hRow) {\r\n            hRow = this.processedRows.find(r => r.vgt_header_id === flatRow.vgt_id);\r\n            if (hRow) {\r\n              hRow = JSON.parse(JSON.stringify(hRow));\r\n              hRow.children = [];\r\n              reconstructedRows.push(hRow);\r\n            }\r\n          }\r\n          hRow.children.push(flatRow);\r\n        }\r\n      });\r\n      return reconstructedRows;\r\n    },\r\n\r\n    originalRows() {\r\n      const rows = this.rows && this.rows.length ? JSON.parse(JSON.stringify(this.rows)) : [];\r\n      let nestedRows = [];\r\n      if (!this.groupOptions.enabled) {\r\n        nestedRows = this.handleGrouped([\r\n          {\r\n            label: 'no groups',\r\n            children: rows,\r\n          },\r\n        ]);\r\n      } else {\r\n        nestedRows = this.handleGrouped(rows);\r\n      }\r\n      // we need to preserve the original index of\r\n      // rows so lets do that\r\n      let index = 0;\r\n      nestedRows.forEach((headerRow) => {\r\n        headerRow.children.forEach((row) => {\r\n          row.originalIndex = index++;\r\n        });\r\n      });\r\n\r\n      return nestedRows;\r\n    },\r\n\r\n    typedColumns() {\r\n      const columns = this.columns;\r\n      for (let i = 0; i < this.columns.length; i++) {\r\n        const column = columns[i];\r\n        column.typeDef = this.dataTypes[column.type] || defaultType;\r\n      }\r\n      return columns;\r\n    },\r\n\r\n    hasRowClickListener() {\r\n      return this.$listeners && this.$listeners['on-row-click'];\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    //* we need to check for expanded row state here\r\n    //* to maintain it when sorting/filtering\r\n    handleExpanded(headerRow) {\r\n      if (this.maintainExpanded &&\r\n        this.expandedRowKeys.has(headerRow[this.rowKeyField])) {\r\n        this.$set(headerRow, 'vgtIsExpanded', true);\r\n      } else {\r\n        this.$set(headerRow, 'vgtIsExpanded', false);\r\n      }\r\n    },\r\n    toggleExpand(id) {\r\n      const headerRow = this.filteredRows.find(r => r[this.rowKeyField] === id);\r\n      if (headerRow) {\r\n        this.$set(headerRow, 'vgtIsExpanded', !headerRow.vgtIsExpanded);\r\n      }\r\n      if (this.maintainExpanded\r\n        && headerRow.vgtIsExpanded) {\r\n        this.expandedRowKeys.add(headerRow[this.rowKeyField]);\r\n      } else {\r\n        this.expandedRowKeys.delete(headerRow[this.rowKeyField]);\r\n      }\r\n    },\r\n\r\n    expandAll() {\r\n      this.filteredRows.forEach((row) => {\r\n        this.$set(row, 'vgtIsExpanded', true);\r\n        if (this.maintainExpanded) {\r\n          this.expandedRowKeys.add(row[this.rowKeyField]);\r\n        }\r\n      });\r\n    },\r\n\r\n    collapseAll() {\r\n      this.filteredRows.forEach((row) => {\r\n        this.$set(row, 'vgtIsExpanded', false);\r\n        this.expandedRowKeys.clear();\r\n      });\r\n    },\r\n\r\n    getColumnForField(field) {\r\n      for (let i = 0; i < this.typedColumns.length; i += 1) {\r\n        if (this.typedColumns[i].field === field) return this.typedColumns[i];\r\n      }\r\n    },\r\n\r\n    handleSearch() {\r\n      this.resetTable();\r\n      // for remote mode, we need to emit on-search\r\n      if (this.mode === 'remote') {\r\n        this.$emit('on-search', {\r\n          searchTerm: this.searchTerm,\r\n        });\r\n      }\r\n    },\r\n\r\n    reset() {\r\n      this.initializeSort();\r\n      this.changePage(1);\r\n      this.$refs['table-header-primary'].reset(true);\r\n      if (this.$refs['table-header-secondary']) {\r\n        this.$refs['table-header-secondary'].reset(true);\r\n      }\r\n    },\r\n\r\n    emitSelectedRows() {\r\n      this.$emit('on-select-all', {\r\n        selected: this.selectedRowCount === this.totalRowCount,\r\n        selectedRows: this.selectedRows,\r\n      });\r\n    },\r\n\r\n    unselectAllInternal(forceAll) {\r\n      const rows =\r\n        this.selectAllByPage && !forceAll ? this.paginated : this.filteredRows;\r\n      rows.forEach((headerRow, i) => {\r\n        headerRow.children.forEach((row, j) => {\r\n          this.$set(row, 'vgtSelected', false);\r\n        });\r\n      });\r\n      this.emitSelectedRows();\r\n    },\r\n\r\n    toggleSelectAll() {\r\n      if (this.allSelected) {\r\n        this.unselectAllInternal();\r\n        return;\r\n      }\r\n      const rows = this.selectAllByPage ? this.paginated : this.filteredRows;\r\n      rows.forEach((headerRow) => {\r\n        headerRow.children.forEach((row) => {\r\n          this.$set(row, 'vgtSelected', true);\r\n        });\r\n      });\r\n      this.emitSelectedRows();\r\n    },\r\n\r\n    toggleSelectGroup(event, headerRow) {\r\n      headerRow.children.forEach((row) => {\r\n        this.$set(row, 'vgtSelected', event.checked);\r\n      });\r\n    },\r\n\r\n    changePage(value) {\r\n      const enabled = this.paginate;\r\n      let { paginationBottom, paginationTop } = this.$refs\r\n      if (enabled) {\r\n        if (this.paginateOnTop && paginationTop) {\r\n          paginationTop.currentPage = value\r\n        }\r\n        if (this.paginateOnBottom && paginationBottom) {\r\n          paginationBottom.currentPage = value\r\n        }\r\n        // we also need to set the currentPage\r\n        // for table.\r\n        this.currentPage = value;\r\n      }\r\n    },\r\n\r\n    pageChangedEvent() {\r\n      return {\r\n        currentPage: this.currentPage,\r\n        currentPerPage: this.currentPerPage,\r\n        total: Math.floor(this.totalRowCount / this.currentPerPage),\r\n      };\r\n    },\r\n\r\n    pageChanged(pagination) {\r\n      this.currentPage = pagination.currentPage;\r\n      if (!pagination.noEmit) {\r\n        const pageChangedEvent = this.pageChangedEvent();\r\n        pageChangedEvent.prevPage = pagination.prevPage;\r\n        this.$emit('on-page-change', pageChangedEvent);\r\n        if (this.mode === 'remote') {\r\n          this.$emit('update:isLoading', true);\r\n        }\r\n      }\r\n    },\r\n\r\n    perPageChanged(pagination) {\r\n      this.currentPerPage = pagination.currentPerPage;\r\n      // ensure that both sides of pagination are in agreement\r\n      // this fixes changes during position = 'both'\r\n      let paginationPosition = this.paginationOptions.position\r\n      if (this.$refs.paginationTop && (paginationPosition === 'top' || paginationPosition === 'both')) {\r\n        this.$refs.paginationTop.currentPerPage = this.currentPerPage\r\n      }\r\n      if (this.$refs.paginationBottom && (paginationPosition === 'bottom' || paginationPosition === 'both')) {\r\n        this.$refs.paginationBottom.currentPerPage = this.currentPerPage\r\n      }\r\n      //* update perPage also\r\n      const perPageChangedEvent = this.pageChangedEvent();\r\n      this.$emit('on-per-page-change', perPageChangedEvent);\r\n      if (this.mode === 'remote') {\r\n        this.$emit('update:isLoading', true);\r\n      }\r\n    },\r\n\r\n    changeSort(sorts) {\r\n      this.sorts = sorts;\r\n      this.$emit('on-sort-change', sorts);\r\n\r\n      // every time we change sort we need to reset to page 1\r\n      this.changePage(1);\r\n\r\n      // if the mode is remote, we don't need to do anything\r\n      // after this. just set table loading to true\r\n      if (this.mode === 'remote') {\r\n        this.$emit('update:isLoading', true);\r\n        return;\r\n      }\r\n      this.sortChanged = true;\r\n    },\r\n\r\n    // checkbox click should always do the following\r\n    onCheckboxClicked(row, index, event) {\r\n      this.$set(row, 'vgtSelected', !row.vgtSelected);\r\n      this.$emit('on-row-click', {\r\n        row,\r\n        pageIndex: index,\r\n        selected: !!row.vgtSelected,\r\n        event,\r\n      });\r\n    },\r\n\r\n    onRowDoubleClicked(row, index, event) {\r\n      this.$emit('on-row-dblclick', {\r\n        row,\r\n        pageIndex: index,\r\n        selected: !!row.vgtSelected,\r\n        event,\r\n      });\r\n    },\r\n\r\n    onRowClicked(row, index, event) {\r\n      if (this.selectable && !this.selectOnCheckboxOnly) {\r\n        this.$set(row, 'vgtSelected', !row.vgtSelected);\r\n      }\r\n      this.$emit('on-row-click', {\r\n        row,\r\n        pageIndex: index,\r\n        selected: !!row.vgtSelected,\r\n        event,\r\n      });\r\n    },\r\n\r\n    onRowAuxClicked(row, index, event) {\r\n      this.$emit('on-row-aux-click', {\r\n        row,\r\n        pageIndex: index,\r\n        selected: !!row.vgtSelected,\r\n        event,\r\n      });\r\n    },\r\n\r\n    onCellClicked(row, column, rowIndex, event) {\r\n      this.$emit('on-cell-click', {\r\n        row,\r\n        column,\r\n        rowIndex,\r\n        event,\r\n      });\r\n    },\r\n\r\n    onMouseenter(row, index) {\r\n      this.$emit('on-row-mouseenter', {\r\n        row,\r\n        pageIndex: index,\r\n      });\r\n    },\r\n\r\n    onMouseleave(row, index) {\r\n      this.$emit('on-row-mouseleave', {\r\n        row,\r\n        pageIndex: index,\r\n      });\r\n    },\r\n\r\n    searchTableOnEnter() {\r\n      if (this.searchTrigger === 'enter') {\r\n        this.handleSearch();\r\n        // we reset the filteredRows here because\r\n        // we want to search across everything.\r\n        this.filteredRows = JSON.parse(JSON.stringify(this.originalRows));\r\n        this.forceSearch = true;\r\n        this.sortChanged = true;\r\n      }\r\n    },\r\n\r\n    searchTableOnKeyUp() {\r\n      if (this.searchTrigger !== 'enter') {\r\n        this.handleSearch();\r\n      }\r\n    },\r\n\r\n    resetTable() {\r\n      this.unselectAllInternal(true);\r\n      // every time we searchTable\r\n      this.changePage(1);\r\n    },\r\n\r\n    // field can be:\r\n    // 1. function (passed as a string using function.name. For example: 'bound myFunction')\r\n    // 2. regular property - ex: 'prop'\r\n    // 3. nested property path - ex: 'nested.prop'\r\n    collect(obj, field) {\r\n      // utility function to get nested property\r\n      function dig(obj, selector) {\r\n        let result = obj;\r\n        const splitter = selector.split('.');\r\n        for (let i = 0; i < splitter.length; i++) {\r\n          if (typeof result === 'undefined' || result === null) {\r\n            return undefined;\r\n          }\r\n          result = result[splitter[i]];\r\n        }\r\n        return result;\r\n      }\r\n\r\n      if (typeof field === 'function') return field(obj);\r\n      if (typeof field === 'string') return dig(obj, field);\r\n      return undefined;\r\n    },\r\n\r\n    collectFormatted(obj, column, headerRow = false) {\r\n      let value;\r\n      if (headerRow && column.headerField) {\r\n        value = this.collect(obj, column.headerField);\r\n      } else {\r\n        value = this.collect(obj, column.field);\r\n      }\r\n      if (value === undefined) return '';\r\n\r\n      // if user has supplied custom formatter,\r\n      // use that here\r\n      if (column.formatFn && typeof column.formatFn === 'function') {\r\n        return column.formatFn(value, obj);\r\n      }\r\n\r\n      // lets format the resultant data\r\n      let type = column.typeDef;\r\n      // this will only happen if we try to collect formatted\r\n      // before types have been initialized. for example: on\r\n      // load when external query is specified.\r\n      if (!type) {\r\n        type = this.dataTypes[column.type] || defaultType;\r\n      }\r\n\r\n      let result = type.format(value, column);\r\n      // we must have some values in compact mode\r\n      if (this.compactMode && (result == '' || result == null)) return '-';\r\n      return result;\r\n    },\r\n\r\n    formattedRow(row, isHeaderRow = false) {\r\n      const formattedRow = {};\r\n      for (let i = 0; i < this.typedColumns.length; i++) {\r\n        const col = this.typedColumns[i];\r\n        // what happens if field is\r\n        if (col.field) {\r\n          formattedRow[col.field] = this.collectFormatted(\r\n            row,\r\n            col,\r\n            isHeaderRow\r\n          );\r\n        }\r\n      }\r\n      return formattedRow;\r\n    },\r\n\r\n    // Get classes for the given column index & element.\r\n    getClasses(index, element, row) {\r\n      const { typeDef, [`${element}Class`]: custom } = this.typedColumns[index];\r\n      let { isRight } = typeDef;\r\n      if (this.rtl) isRight = true;\r\n\r\n      const classes = {\r\n        'vgt-right-align': isRight,\r\n        'vgt-left-align': !isRight,\r\n      };\r\n\r\n      // for td we need to check if value is\r\n      // a function.\r\n      if (typeof custom === 'function') {\r\n        classes[custom(row)] = true;\r\n      } else if (typeof custom === 'string') {\r\n        classes[custom] = true;\r\n      }\r\n      return classes;\r\n    },\r\n\r\n    // method to filter rows\r\n    filterRows(columnFilters, fromFilter = true) {\r\n      // if (!this.rows.length) return;\r\n      // this is invoked either as a result of changing filters\r\n      // or as a result of modifying rows.\r\n      this.columnFilters = columnFilters;\r\n      let computedRows = JSON.parse(JSON.stringify(this.originalRows));\r\n      let instancesOfFiltering = false;\r\n\r\n      // do we have a filter to care about?\r\n      // if not we don't need to do anything\r\n      if (this.columnFilters && Object.keys(this.columnFilters).length) {\r\n        // every time we filter rows, we need to set current page\r\n        // to 1\r\n        // if the mode is remote, we only need to reset, if this is\r\n        // being called from filter, not when rows are changing\r\n        if (this.mode !== 'remote' || fromFilter) {\r\n          this.changePage(1);\r\n        }\r\n        // we need to emit an event and that's that.\r\n        // but this only needs to be invoked if filter is changing\r\n        // not when row object is modified.\r\n        if (fromFilter) {\r\n          this.$emit('on-column-filter', {\r\n            columnFilters: this.columnFilters,\r\n          });\r\n        }\r\n\r\n        // if mode is remote, we don't do any filtering here.\r\n        if (this.mode === 'remote') {\r\n          if (fromFilter) {\r\n            this.$emit('update:isLoading', true);\r\n          } else {\r\n            // if remote filtering has already been taken care of.\r\n            this.filteredRows = computedRows;\r\n          }\r\n          return;\r\n        }\r\n\r\n        const fieldKey = (field) => {\r\n          if (typeof(field) === 'function' && field.name) {\r\n            return field.name;\r\n          }\r\n          return field;\r\n        }\r\n\r\n        for (let i = 0; i < this.typedColumns.length; i++) {\r\n          const col = this.typedColumns[i];\r\n          if (this.columnFilters[fieldKey(col.field)]) {\r\n\r\n            instancesOfFiltering = true;\r\n            computedRows.forEach((headerRow) => {\r\n              const newChildren = headerRow.children.filter((row) => {\r\n                // If column has a custom filter, use that.\r\n                if (\r\n                  col.filterOptions &&\r\n                  typeof col.filterOptions.filterFn === 'function'\r\n                ) {\r\n                  return col.filterOptions.filterFn(\r\n                    this.collect(row, col.field),\r\n                    this.columnFilters[fieldKey(col.field)]\r\n                  );\r\n                }\r\n\r\n                // Otherwise Use default filters\r\n                const { typeDef } = col;\r\n                return typeDef.filterPredicate(\r\n                  this.collect(row, col.field),\r\n                  this.columnFilters[fieldKey(col.field)],\r\n                  false,\r\n                  col.filterOptions &&\r\n                    typeof col.filterOptions.filterDropdownItems === 'object'\r\n                );\r\n              });\r\n              // should we remove the header?\r\n              headerRow.children = newChildren;\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      if (instancesOfFiltering) {\r\n        this.filteredRows = computedRows.filter((h) => h.children && h.children.length);\r\n      } else {\r\n        this.filteredRows = computedRows;\r\n      }\r\n    },\r\n\r\n    getCurrentIndex(rowId) {\r\n      let index = 0;\r\n      let found = false;\r\n      for (let i = 0; i < this.paginated.length; i += 1) {\r\n        const headerRow = this.paginated[i];\r\n        const { children } = headerRow;\r\n        if (children && children.length) {\r\n          for (let j = 0; j < children.length; j += 1) {\r\n            const c = children[j];\r\n            if (c.originalIndex === rowId) {\r\n              found = true;\r\n              break;\r\n            }\r\n            index += 1;\r\n          }\r\n        }\r\n        if (found) break;\r\n      }\r\n      return ((this.currentPage - 1) * this.currentPerPage) + index + 1;\r\n    },\r\n\r\n    getRowStyleClass(row) {\r\n      let classes = '';\r\n      if (this.hasRowClickListener) classes += 'clickable';\r\n      let rowStyleClasses;\r\n      if (typeof this.rowStyleClass === 'function') {\r\n        rowStyleClasses = this.rowStyleClass(row);\r\n      } else {\r\n        rowStyleClasses = this.rowStyleClass;\r\n      }\r\n      if (rowStyleClasses) {\r\n        classes += ` ${rowStyleClasses}`;\r\n      }\r\n      return classes;\r\n    },\r\n\r\n    handleGrouped(originalRows) {\r\n      originalRows.forEach((headerRow, i) => {\r\n        headerRow.vgt_header_id = i;\r\n        if (\r\n          this.groupOptions.maintainExpanded &&\r\n          this.expandedRowKeys.has(headerRow[this.groupOptions.rowKey])\r\n        ) {\r\n          this.$set(headerRow, 'vgtIsExpanded', true);\r\n        }\r\n        headerRow.children.forEach((childRow) => {\r\n          childRow.vgt_id = i;\r\n        });\r\n      });\r\n      return originalRows;\r\n    },\r\n\r\n    initializePagination() {\r\n      const {\r\n        enabled,\r\n        perPage,\r\n        position,\r\n        perPageDropdown,\r\n        perPageDropdownEnabled,\r\n        dropdownAllowAll,\r\n        firstLabel,\r\n        lastLabel,\r\n        nextLabel,\r\n        prevLabel,\r\n        rowsPerPageLabel,\r\n        ofLabel,\r\n        pageLabel,\r\n        allLabel,\r\n        setCurrentPage,\r\n        mode,\r\n        infoFn,\r\n      } = this.paginationOptions;\r\n\r\n      if (typeof enabled === 'boolean') {\r\n        this.paginate = enabled;\r\n      }\r\n\r\n      if (typeof perPage === 'number') {\r\n        this.perPage = perPage;\r\n      }\r\n\r\n      if (position === 'top') {\r\n        this.paginateOnTop = true; // default is false\r\n        this.paginateOnBottom = false; // default is true\r\n      } else if (position === 'both') {\r\n        this.paginateOnTop = true;\r\n        this.paginateOnBottom = true;\r\n      }\r\n\r\n      if (Array.isArray(perPageDropdown) && perPageDropdown.length) {\r\n        this.customRowsPerPageDropdown = perPageDropdown;\r\n        if (!this.perPage) {\r\n          [this.perPage] = perPageDropdown;\r\n        }\r\n      }\r\n\r\n      if (typeof perPageDropdownEnabled === 'boolean') {\r\n        this.perPageDropdownEnabled = perPageDropdownEnabled;\r\n      }\r\n\r\n      if (typeof dropdownAllowAll === 'boolean') {\r\n        this.paginateDropdownAllowAll = dropdownAllowAll;\r\n      }\r\n\r\n      if (typeof mode === 'string') {\r\n        this.paginationMode = mode;\r\n      }\r\n\r\n      if (typeof firstLabel === 'string') {\r\n        this.firstText = firstLabel;\r\n      }\r\n\r\n      if (typeof lastLabel === 'string') {\r\n        this.lastText = lastLabel;\r\n      }\r\n\r\n      if (typeof nextLabel === 'string') {\r\n        this.nextText = nextLabel;\r\n      }\r\n\r\n      if (typeof prevLabel === 'string') {\r\n        this.prevText = prevLabel;\r\n      }\r\n\r\n      if (typeof rowsPerPageLabel === 'string') {\r\n        this.rowsPerPageText = rowsPerPageLabel;\r\n      }\r\n\r\n      if (typeof ofLabel === 'string') {\r\n        this.ofText = ofLabel;\r\n      }\r\n\r\n      if (typeof pageLabel === 'string') {\r\n        this.pageText = pageLabel;\r\n      }\r\n\r\n      if (typeof allLabel === 'string') {\r\n        this.allText = allLabel;\r\n      }\r\n\r\n      if (typeof setCurrentPage === 'number') {\r\n        setTimeout(() => {\r\n          this.changePage(setCurrentPage);\r\n        }, 500);\r\n      }\r\n\r\n      if (typeof infoFn === 'function') {\r\n        this.paginationInfoFn = infoFn;\r\n      }\r\n    },\r\n\r\n    initializeSearch() {\r\n      const {\r\n        enabled,\r\n        trigger,\r\n        externalQuery,\r\n        searchFn,\r\n        placeholder,\r\n        skipDiacritics,\r\n      } = this.searchOptions;\r\n\r\n      if (typeof enabled === 'boolean') {\r\n        this.searchEnabled = enabled;\r\n      }\r\n\r\n      if (trigger === 'enter') {\r\n        this.searchTrigger = trigger;\r\n      }\r\n\r\n      if (typeof externalQuery === 'string') {\r\n        this.externalSearchQuery = externalQuery;\r\n      }\r\n\r\n      if (typeof searchFn === 'function') {\r\n        this.searchFn = searchFn;\r\n      }\r\n\r\n      if (typeof placeholder === 'string') {\r\n        this.searchPlaceholder = placeholder;\r\n      }\r\n\r\n      if (typeof skipDiacritics === 'boolean') {\r\n        this.searchSkipDiacritics = skipDiacritics;\r\n      }\r\n    },\r\n\r\n    initializeSort() {\r\n      const { enabled, initialSortBy, multipleColumns } = this.sortOptions;\r\n      const initSortBy = JSON.parse(JSON.stringify(initialSortBy || {}));\r\n\r\n      if (typeof enabled === 'boolean') {\r\n        this.sortable = enabled;\r\n      }\r\n\r\n      if (typeof multipleColumns === 'boolean') {\r\n        this.multipleColumnSort = multipleColumns;\r\n      }\r\n\r\n      //* initialSortBy can be an array or an object\r\n      if (typeof initSortBy === 'object') {\r\n        const ref = this.fixedHeader\r\n          ? this.$refs['table-header-secondary']\r\n          : this.$refs['table-header-primary'];\r\n        if (Array.isArray(initSortBy)) {\r\n          ref.setInitialSort(initSortBy);\r\n        } else {\r\n          const hasField = Object.prototype.hasOwnProperty.call(\r\n            initSortBy,\r\n            'field'\r\n          );\r\n          if (hasField) ref.setInitialSort([initSortBy]);\r\n        }\r\n      }\r\n    },\r\n\r\n    initializeSelect() {\r\n      const {\r\n        enabled,\r\n        selectionInfoClass,\r\n        selectionText,\r\n        clearSelectionText,\r\n        selectOnCheckboxOnly,\r\n        selectAllByPage,\r\n        disableSelectInfo,\r\n        selectAllByGroup,\r\n      } = this.selectOptions;\r\n\r\n      if (typeof enabled === 'boolean') {\r\n        this.selectable = enabled;\r\n      }\r\n\r\n      if (typeof selectOnCheckboxOnly === 'boolean') {\r\n        this.selectOnCheckboxOnly = selectOnCheckboxOnly;\r\n      }\r\n\r\n      if (typeof selectAllByPage === 'boolean') {\r\n        this.selectAllByPage = selectAllByPage;\r\n      }\r\n\r\n      if (typeof selectAllByGroup === 'boolean') {\r\n        this.selectAllByGroup = selectAllByGroup;\r\n      }\r\n\r\n      if (typeof disableSelectInfo === 'boolean') {\r\n        this.disableSelectInfo = disableSelectInfo;\r\n      }\r\n\r\n      if (typeof selectionInfoClass === 'string') {\r\n        this.selectionInfoClass = selectionInfoClass;\r\n      }\r\n\r\n      if (typeof selectionText === 'string') {\r\n        this.selectionText = selectionText;\r\n      }\r\n\r\n      if (typeof clearSelectionText === 'string') {\r\n        this.clearSelectionText = clearSelectionText;\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    if (this.perPage) {\r\n      this.currentPerPage = this.perPage;\r\n    }\r\n    this.initializeSort();\r\n  },\r\n\r\n  components: {\r\n    'vgt-pagination': VgtPagination,\r\n    'vgt-global-search': VgtGlobalSearch,\r\n    'vgt-header-row': VgtHeaderRow,\r\n    'vgt-table-header': VgtTableHeader,\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n@import \"../styles/style\";\r\n</style>\r\n","import VueGoodTable from './components/Table.vue';\r\n\r\nconst VueGoodTablePlugin = {\r\n  install(Vue, options) {\r\n    Vue.component(VueGoodTable.name, VueGoodTable);\r\n  },\r\n};\r\n\r\n// Automatic installation if Vue has been added to the global scope.\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(VueGoodTablePlugin);\r\n}\r\n\r\nexport default VueGoodTablePlugin;\r\nexport { VueGoodTable };\r\n"],"names":["SORT_TYPES","PAGINATION_MODES","DEFAULT_ROWS_PER_PAGE_DROPDOWN","argsTag","mapTag","objectTag","setTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","global","Object","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","binding","e","nodeIsTypedArray","isTypedArray","arraySome","array","predicate","index","length","mapToArray","map","result","Array","size","forEach","value","key","setToArray","set","uid","func","transform","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","toString","hasOwnProperty","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","reIsNative","RegExp","call","replace","Buffer","undefined","Symbol","Uint8Array","propertyIsEnumerable","splice","symToStringTag","toStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","this","clear","entry","ListCache","MapCache","SetCache","values","__data__","add","Stack","data","arrayLikeKeys","inherited","isArr","isArray","isArg","isArguments","isBuff","isType","skipIndexes","n","iteratee","baseTimes","String","isIndex","push","assocIndexOf","eq","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","object","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","name","message","convert","isPartial","stacked","get","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isObject","isMasked","isFunction","test","baseKeys","Ctor","proto","arrLength","seen","arrValue","othIndex","has","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","getMapData","type","getValue","pop","hash","string","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","resolve","ctorString","arguments","isLength","baseUnary","diacritics","a","b","c","d","f","g","h","i","j","k","l","m","o","p","q","r","s","t","u","v","w","x","y","z","compiledDiactitics","ok","rval","val","regexNonASCII","diacriticless","text","search","len","searchChar","charAt","escapeRegExp","str","format","filterPredicate","rowval","filter","skipDiacritics","fromDropdown","rowValue","toLowerCase","searchTerm","indexOf","compare","cook","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","render","staticRenderFns","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","originalRender","existing","beforeCreate","concat","getColumnFirstSortType","column","firstSortType","getNextSort","currentSort","sortArray","field","getIndex","currentPrimarySort","getCurrentPrimarySort","nextPrimarySort","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","args","TypeError","toDate","argument","argStr","Date","getTime","console","warn","Error","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","getDateMillisecondsPart","date","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","isValid","formatDistanceLocale","lessThanXSeconds","one","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","dirtyOptions","width","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","buildMatchFn","dirtyString","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","findIndex","pattern","findKey","valueCallback","rest","slice","locale","code","formatDistance","token","count","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","_dirtyOptions","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","weekStartsOn","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","sign","output","abs","formatters","signedYear","getUTCFullYear","year","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","numberOfDigits","milliseconds","getUTCMilliseconds","pow","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","getUTCISOWeek","round","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","Q","M","L","week","I","isoWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","isoDayOfWeek","dayPeriodEnumValue","hours","B","H","K","S","X","_localize","timezoneOffset","_originalDate","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","originalDate","T","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","longFormatters","P","dateTimeFormat","datePattern","timePattern","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","input","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","utcDate","formatterOptions","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","assign","target","dirtyObject","property","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","dirtyWeek","setUTCWeek","dirtyISOWeek","setUTCISOWeek","subPriority","isLeapYear","wholeWeekDays","setUTCISODay","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","setterArray","convertedDate","setFullYear","setHours","def","isRight","dateInputFormat","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","compareAsc","convertUtcToLocal","dateOutputFormat","error","Infinity","parseFloat","decimal","toFixed","percentage","boolean","VueGoodTablePlugin","install","Vue","component","VueGoodTable","window","use"],"mappings":"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IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3DC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1EC,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF7L,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF8L,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClCC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpFC,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3DC,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzF3G,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF4G,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,MAEFC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvCC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,KACxBC,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1EC,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAG,CACD,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtDC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC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"}